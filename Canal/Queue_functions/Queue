#include "Canal.h"

Queue* init_queue() {
    Queue *q = (Queue*)malloc(sizeof(Queue));
    q->front = q->rear = NULL;
    q->size = 0;
    return q;
}

void enqueue(Queue *q, Ship *ship) {
    Node *new_node = (Node*)malloc(sizeof(Node));
    new_node->ship = ship;
    new_node->next = NULL;
    
    if (q->rear == NULL) {
        q->front = q->rear = new_node;
    } else {
        q->rear->next = new_node;
        q->rear = new_node;
    }
    
    q->size++;
}

Ship* dequeue(Queue *q) {
    if (q->front == NULL) {
        return NULL; // Queue is empty
    }
    
    Node *temp = q->front;
    Ship *ship = temp->ship;
    q->front = q->front->next;
    
    if (q->front == NULL) {
        q->rear = NULL;
    }
    
    free(temp);
    q->size--;
    return ship;
}

Ship* peek(Queue *q) {
    if (q->front == NULL) {
        return NULL; // Queue is empty
    }
    return q->front->ship;
}

int queue_is_empty(Queue *q) {
    return q->size == 0;
}

void destroy_queue(Queue *q) {
    while (!queue_is_empty(q)) {
        dequeue(q); // Free all elements
    }
    free(q); // Free the queue itself
}
